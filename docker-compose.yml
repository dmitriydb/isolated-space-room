version: "4.0"

networks:
  roomnetwork:
    external: true

services:
  roomserver:
    container_name: roomserver
    networks:
      - roomnetwork
    build:
      context: /temperature-service/.
      dockerfile: Dockerfile
    environment:
      T_SERVER_PORT: 10000
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: roomzookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - roomnetwork
  broker1:
    image: confluentinc/cp-kafka:7.0.1
    container_name: roombroker1
    ports:
      - "9093:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'roomzookeeper.roomnetwork:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
      KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://roombroker1.roomnetwork:29092,EXTERNAL://localhost:9093"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - roomnetwork
  sensor1:
    ports:
      - "10002:9999"
    container_name: sensor1
    networks:
      - roomnetwork
    build:
      context: /temperature-sensor/.
      dockerfile: Dockerfile
    environment:
      PRODUCTION: true
    depends_on:
      - broker1
      - zookeeper
      - roomserver
  roomguard:
      container_name: roomguard
      networks:
        - roomnetwork
      build:
        context: /room-guard/.
        dockerfile: Dockerfile
      environment:
        PRODUCTION: true
